<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>JBoss Weekly 2019-03-22</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/2GqhQn-J5pk/jboss-weekly-2019-03-22" /><category term="byteman" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_weeklyeditorial" scheme="searchisko:content:tags" /><category term="hibernate_orm" scheme="searchisko:content:tags" /><category term="hibernate_search" scheme="searchisko:content:tags" /><category term="hibernate_validator" scheme="searchisko:content:tags" /><category term="jgroups" scheme="searchisko:content:tags" /><category term="quarkus" scheme="searchisko:content:tags" /><category term="weekly_editorial" scheme="searchisko:content:tags" /><author><name>Jason Porter</name></author><id>searchisko:content:id:jbossorg_blog-jboss_weekly_2019_03_22</id><updated>2019-03-23T00:24:47Z</updated><published>2019-03-23T00:24:00Z</published><content type="html">&lt;!-- [DocumentBodyStart:f6d1eccf-09c5-4eda-a760-0db629a2ef51] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;div&gt;&lt;div&gt;&lt;div class="sectionbody"&gt;&lt;div class="paragraph"&gt;&lt;p&gt;Welcome to another JBoss Weekly Editorial as we prepare for the end of March! We have a number of releases and blogs posts to highlight, so let&amp;#8217;s get to it.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="sect1"&gt;&lt;h2&gt;New Releases&lt;/h2&gt;&lt;div class="sectionbody"&gt;&lt;div class="ulist"&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2019/03/21/hibernate-validator-6016-final-out/" rel="nofollow"&gt;Hibernate Validator 6.0.16.Final&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2019/03/22/hibernate-search-6-0-0-Alpha3/" rel="nofollow"&gt;Hibernate Search 6.0.0.Alpha3&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2019/03/22/hibernate-orm-542-final-out/" rel="nofollow"&gt;Hibernate ORM 5.4.2.Final&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="http://bytemanblog.blogspot.com/2019/03/byteman-406-has-been-released.html" rel="nofollow"&gt;Byteman 4.0.6&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="https://github.com/quarkusio/quarkus/releases/tag/0.12.0" rel="nofollow"&gt;Quarkus 0.12.0&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="http://belaban.blogspot.com/2019/03/4019.html" rel="nofollow"&gt;JGroups 4.0.19&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="sect1"&gt;&lt;h2&gt;&lt;/h2&gt;&lt;h2&gt;Blogs&lt;/h2&gt;&lt;div class="sectionbody"&gt;&lt;div class="paragraph"&gt;&lt;p&gt;Christina Lin has a blog detailing which she believes are eight ideas that lead to &lt;a class="jive-link-external-small" href="http://wei-meilin.blogspot.com/2019/03/my2cents-eight-things-leads-to.html" rel="nofollow"&gt;"catastrophic cloud native microservice" deployments.&lt;/a&gt;If you are working with microservices, or are thinking about it, this blog is certainly worth a look.&lt;/p&gt;&lt;/div&gt;&lt;div class="paragraph"&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Eric Schabell has written a couple of pieces on &lt;a class="jive-link-external-small" href="http://www.schabell.org/2019/03/integration-key-to-customer-experience-example-mobile-integration.html" rel="nofollow"&gt;integration&lt;/a&gt; and has a follow-up &lt;a class="jive-link-external-small" href="http://www.schabell.org/2019/03/modern-process-integration-tooling-workshop-lab7.html" rel="nofollow"&gt;lab&lt;/a&gt; to better explain the points of integration and automation.&lt;/p&gt;&lt;/div&gt;&lt;div class="paragraph"&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Lastly, Brain Stansberry detailed the &lt;a class="jive-link-external-small" href="http://wildfly.org/news/2019/03/09/Onward-to_WildFly-17/" rel="nofollow"&gt;Wildfly 17 release roadmap&lt;/a&gt; over on the Wildfly site.&lt;/p&gt;&lt;/div&gt;&lt;div class="paragraph"&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Great stuff is happening within Red Hat! Stay tuned for even more as the year progresses!&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:f6d1eccf-09c5-4eda-a760-0db629a2ef51] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/2GqhQn-J5pk" height="1" width="1" alt=""/&gt;</content><summary>Welcome to another JBoss Weekly Editorial as we prepare for the end of March! We have a number of releases and blogs posts to highlight, so let’s get to it.   New Releases Hibernate Validator 6.0.16.Final Hibernate Search 6.0.0.Alpha3 Hibernate ORM 5.4.2.Final Byteman 4.0.6 Quarkus 0.12.0 JGroups 4.0.19 Blogs Christina Lin has a blog detailing which she believes are eight ideas that lead to "catas...</summary><dc:creator>Jason Porter</dc:creator><dc:date>2019-03-23T00:24:00Z</dc:date><feedburner:origLink>https://developer.jboss.org/blogs/weekly-editorial/2019/03/22/jboss-weekly-2019-03-22</feedburner:origLink></entry><entry><title>Byteman 4.0.6 has been released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/7yN71bioETQ/byteman-406-has-been-released.html" /><category term="feed_group_name_byteman" scheme="searchisko:content:tags" /><category term="feed_name_byteman" scheme="searchisko:content:tags" /><author><name>Andrew Dinn</name></author><id>searchisko:content:id:jbossorg_blog-byteman_4_0_6_has_been_released</id><updated>2019-03-22T16:15:00Z</updated><published>2019-03-22T16:15:00Z</published><content type="html">Byteman 4.0.6 is now available from the &lt;a href="http://www.jboss.org/byteman/downloads"&gt;Byteman downloads page&lt;/a&gt; and from the &lt;a href="https://oss.sonatype.org/index.html#nexus-search;quick%7Ebyteman"&gt;Maven Central repository&lt;/a&gt;. It is the latest update release for use on JDK9+ runtimes. It is also recommended as the preferred release for use on JDK8- runtimes.&lt;br /&gt;&lt;br /&gt;Byteman 4.0.6 updates the 4.0.5 release to ensure that it works&amp;nbsp; correctly on the latest JDK13 releases. Specifically, it ensures that Byteman is able to process class files with a JDK13 class file version (the previous release would run on JDK13 but could only classes whose bytecode file version was for JDK12 or lower.&lt;br /&gt;&lt;br /&gt;Byteman 4.0.6 includes two exciting new features. The first provides support for a new location specifier AT/AFTER NEW. This can be used to inject a rule at locations in method code where a new instance or new array is created. Full details are provided in &lt;a href="http://downloads.jboss.org/byteman/latest/byteman-programmers-guide.html#rule-events"&gt;Rule Events&lt;/a&gt; section of the &lt;a href="http://downloads.jboss.org/byteman/latest/byteman-programmers-guide.html"&gt;latest Byteman Programmer's Guide&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;The second new feature has been contributed by Red Hat's Jonathan Halliday (many thanks, Jonathan). It extends the BMUnit package to support integration with JUnit5. The API change is relatively simple. With the original JUnit integration you needed to annotate your test classes with the JUnit4 @RunWith annotation, configuring it so it used Byteman class BMUnitRunner to run the tests. Integration with JUnit5 relies on use of annotation&amp;nbsp; @WithByteman. There is no longer any need to use a Byteman-specific Runner class.&lt;br /&gt;&lt;br /&gt;Since JUnit5 relies on JDK8 classes you can only use this new feature on JDK8+. You will need to ensure that you include new jar byteman-bmunit5.jar as a dependency in order to be able to access the new annotation. Full details of how to configure BMUNit tests with JUnit5 have been added to the &lt;a href="https://developer.jboss.org/wiki/BMUnitUsingBytemanWithJUnitOrTestNGFromMavenAndAnt#top"&gt;BMUnit tutorial&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Byteman 4.0.6 also includes a couple of small bug fixes. More details can be found in the &lt;a href="http://downloads.jboss.org/byteman/latest/ReleaseNotes.txt"&gt;Release Notes&lt;/a&gt;.&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/7yN71bioETQ" height="1" width="1" alt=""/&gt;</content><summary>Byteman 4.0.6 is now available from the Byteman downloads page and from the Maven Central repository. It is the latest update release for use on JDK9+ runtimes. It is also recommended as the preferred release for use on JDK8- runtimes. Byteman 4.0.6 updates the 4.0.5 release to ensure that it works  correctly on the latest JDK13 releases. Specifically, it ensures that Byteman is able to process cl...</summary><dc:creator>Andrew Dinn</dc:creator><dc:date>2019-03-22T16:15:00Z</dc:date><feedburner:origLink>http://bytemanblog.blogspot.com/2019/03/byteman-406-has-been-released.html</feedburner:origLink></entry><entry><title>Rust All Hands 2019: Array iterators, Rayon, and more</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/opSyMUQk1a0/" /><category term="community" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Programming Languages" scheme="searchisko:content:tags" /><category term="Rust" scheme="searchisko:content:tags" /><author><name>Josh Stone</name></author><id>searchisko:content:id:jbossorg_blog-rust_all_hands_2019_array_iterators_rayon_and_more</id><updated>2019-03-22T07:05:51Z</updated><published>2019-03-22T07:05:51Z</published><content type="html">&lt;p&gt;A few weeks ago, I had the pleasure of attending the second annual &lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; All Hands meeting, &lt;a href="https://blog.mozilla.org/berlin/rust-all-hands-2019/"&gt;hosted by Mozilla at their Berlin office&lt;/a&gt;. The attendees were a mix of volunteers and corporate employees covering the full range of Rust development, including the compiler, language, libraries, docs, tools, operations, and community. Although I’m sure there will be an official summary of the meeting (like &lt;a href="https://blog.rust-lang.org/2018/04/06/all-hands.html"&gt;last year’s&lt;/a&gt;), in this article, I&amp;#8217;ll cover a few things I was directly involved in. First, I&amp;#8217;ll look at a feature many developers have wanted for a long time&amp;#8230;&lt;span id="more-568597"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Array Iterators&lt;/h2&gt; &lt;p&gt;Idiomatic Rust code will make heavy use of the &lt;code&gt;Iterator&lt;/code&gt; trait, but unfortunately this doesn’t work for arrays. This trait is not just a library feature but is also baked into the compiler, as even the plain &lt;code&gt;for&lt;/code&gt; loop uses &lt;code&gt;IntoIterator&lt;/code&gt; to convert its input, then calling &lt;code&gt;Iterator::next()&lt;/code&gt; for each cycle of the loop. However, &lt;code&gt;[T; N]&lt;/code&gt; arrays do not implement &lt;code&gt;IntoIterator&lt;/code&gt; by value, so the best you can do is iterate it as a slice by reference (&lt;code&gt;iter()&lt;/code&gt; and &lt;code&gt;iter_mut()&lt;/code&gt;), or put your values in a &lt;code&gt;Vec&amp;#60;T&amp;#62;&lt;/code&gt; on the heap instead to iterate by value. It’s also possible to iterate an array directly using a third party wrapper like &lt;code&gt;ArrayVec&lt;/code&gt;, but this functionality really ought to be native in the standard library.&lt;/p&gt; &lt;pre&gt;for s in ["abc", "foo", "xyz"] {} // Nope, can't iterate a simple array by value for &amp;#38;s in &amp;#38;["abc", "foo", "xyz"] {} // It's OK by reference instead. let words: Vec&amp;#60;_&amp;#62; = my_string.split_whitespace().flat_map(|word| { // Can't return a temporary array for iteration at all [word.to_lower(), word.to_upper()] }).collect();&lt;/pre&gt; &lt;p&gt;I first tried to implement &lt;code&gt;IntoIterator&lt;/code&gt; for arrays in &lt;a href="https://github.com/rust-lang/rust/pull/32871"&gt;PR32871&lt;/a&gt;. This wasn’t too hard technically, but the lack of constant generics made it a bit awkward. We don’t have a way to implement&lt;code&gt;[T; N]&lt;/code&gt; for any N length, so at the moment traits are only implemented for lengths 0 through 32. The more unfortunate part is that this showed up in the iterator type signature too. While we would like it to be something like &lt;code&gt;array::IntoIter&amp;#60;T, N&amp;#62;&lt;/code&gt;, without const generics I could only make this &lt;code&gt;IntoIter&amp;#60;T, A&amp;#62;&lt;/code&gt; with a constraint that &lt;code&gt;A&lt;/code&gt; must implement an internal &lt;code&gt;FixedSizeArray&lt;/code&gt; trait. The libs team really didn’t want to commit to this, so that PR was closed.&lt;/p&gt; &lt;p&gt;Later, Rust did approve &lt;a href="https://github.com/rust-lang/rfcs/blob/master/text/2000-const-generics.md"&gt;RFC2000&lt;/a&gt; for const generics, so I opened a new &lt;a href="https://github.com/rust-lang/rust/pull/49000"&gt;PR49000&lt;/a&gt; for array iterators. (What nice round numbers!) We still didn’t have const generics implemented, but I argued for a path forward: add &lt;code&gt;IntoIterator&lt;/code&gt; without stabilizing the &lt;code&gt;array::IntoIter&lt;/code&gt; type, and we could clean that up in the near future. This seemed acceptable except for one more sticky issue, which was breaking the method resolution of existing &lt;code&gt;.into_iter()&lt;/code&gt; calls. Currently, because arrays don’t directly have that method, such calls will auto-reference into a &lt;em&gt;slice&lt;/em&gt; iterator. Adding the array &lt;code&gt;IntoIterator&lt;/code&gt; will disrupt this into a value iterator. Clippy &lt;a href="https://github.com/rust-lang/rust-clippy/pull/3344"&gt;PR3344&lt;/a&gt; added a lint for code that would be broken here, but we still want to proceed very carefully because these cases appear to be common. Clippy even had to change a few calls to &lt;code&gt;.iter()&lt;/code&gt; in its own code in that PR!&lt;/p&gt; &lt;p&gt;That’s much ado to bring us to the All Hands, where I came into the libs meeting with a hopeful solution. The idea we had toward the end of PR49000 was that we could add a new inherent method to arrays, preserving the current behavior for method resolution. The compiler prioritizes inherent methods over trait methods, but we would still get the benefit of the new &lt;code&gt;IntoIterator&lt;/code&gt; for arrays by value in &lt;code&gt;for&lt;/code&gt; loops, &lt;code&gt;chain&lt;/code&gt;, &lt;code&gt;flat_map&lt;/code&gt;, etc., where the trait method is called explicitly. We could also add a deprecation message on this inherent method to suggest using slice &lt;code&gt;iter()&lt;/code&gt; instead. Although adding this inherent method would need some compiler lang help, the libs team was enthusiastic about this approach, and we announced this success at the All Hands end-of-day summary.&lt;/p&gt; &lt;pre&gt;// Here's the inherent method. (demonstrating with full const generics) impl&amp;#60;T, const N: usize&amp;#62; [T; N] { #[deprecated(note = "use slice `iter()` to iterate by reference)] fn into_iter(&amp;#38;self) -&amp;#62; slice::Iter&amp;#60;'_, T&amp;#62; { self.iter() } } // Now the new trait impl can hide behind the inherent method. impl&amp;#60;T, const N: usize&amp;#62; IntoIterator for [T; N] { type Item = T; type IntoIter = IntoIter&amp;#60;T, N&amp;#62;; fn into_iter(self) -&amp;#62; Self::IntoIter { // ... } }&lt;/pre&gt; &lt;p&gt;If you’re more familiar with Rust’s method resolution, you may already see the problem with this approach, which I realized the next day. We had experimented during the meeting with a placeholder &lt;code&gt;struct A&lt;/code&gt; type to confirm the use of the inherent method, but we hadn’t properly covered all variations. When I expanded the example later, I found that no, an inherent &lt;code&gt;into_iter(&amp;#38;self)&lt;/code&gt; does not actually take precedence over &lt;code&gt;IntoIterator::into_iter(self)&lt;/code&gt; when called directly on an array value. The latter is found first because the method receiver is a direct &lt;code&gt;self&lt;/code&gt;, whereas the former requires auto-referencing to call on &lt;code&gt;&amp;#38;self&lt;/code&gt;. We &lt;em&gt;must&lt;/em&gt; use a reference to borrow the array for &lt;code&gt;slice::Iter&lt;/code&gt;, so it seems we don’t actually have a way to preempt &lt;code&gt;IntoIterator&lt;/code&gt; here.&lt;/p&gt; &lt;p&gt;Sadly, we had to revoke our previous announcement of success. Maybe we can still find a way to override method resolution in the compiler for this issue, if we’re willing to accept some language impurity here. Otherwise, we’re back to finding ways to lessen the pain of adding this new trait implementation. The first step is probably to promote that Clippy lint into the main compiler to give it more visibility, but even then we’ll probably want to leave that warning for a while before daring to make the actual change. If you’re using &lt;code&gt;into_iter()&lt;/code&gt; on an array to get a slice iterator, please switch to &lt;code&gt;iter()&lt;/code&gt; ASAP, and if you have ideas to ease this transition, please speak up!&lt;/p&gt; &lt;h2&gt;More at All Hands&lt;/h2&gt; &lt;p&gt;Another useful meeting was with the WebAssembly (Wasm) working group, where I represented &lt;a href="https://crates.io/crates/rayon"&gt;Rayon&lt;/a&gt;—a crate providing a work-stealing threadpool and parallel iterators. We would love to get Rayon working with Wasm to enable that easy parallelism under JavaScript, but threading is still in an early state. Most of the &lt;code&gt;std::thread&lt;/code&gt; implementation for Wasm is just stubbed out, so Rayon will hit errors as soon as it tries to start a threadpool. We talked about the limitations faced with threads that would want to wait on JavaScript promises but decided it would still be useful to have Rayon usable for CPU-bound workloads. We planned to add a custom way to start Rayon&amp;#8217;s threadpool where they can control the spawning, and I&amp;#8217;ve since opened &lt;a href="https://github.com/rayon-rs/rayon/pull/636"&gt;rayon PR636&lt;/a&gt; for experimentation.&lt;/p&gt; &lt;p&gt;Between several meetings on the build system and the infrastructure and release teams, we made plans to improve the experience for Rust contributors. In rustbuild, the bespoke tool for bootstrapping &lt;code&gt;rustc&lt;/code&gt; itself, we discussed a few different contributor workflows and how we might reduce their burden. The plan is to more aggressively cache build artifacts that won&amp;#8217;t affect that contributor&amp;#8217;s goal and make it easier to use the build options for that path. The infrastructure team discussed the burden of CI in landing your pull request, because Rust requires a clean CI run before merging any change. A full run takes about 2.5 hours, and we talked about ways we could tweak the current CI runs to have less redundant testing, while still ensuring sufficient coverage. Finally, in the release team, we talked about adding more automation to aid issue triage and pull request management, such as a new bot to let anyone apply issue labels and one to automatically manage PR rollups to aggregate CI runs.&lt;/p&gt; &lt;p&gt;Beyond the meetings in which I was actively involved, the Rust All Hands was also a great opportunity to learn more about what other teams are working on. Now that the 2018 edition has shipped in Rust 1.31, everyone can take a breath from the release crunch and start planning for the next few years. The compiler team discussed some potentially major refactoring that could enable better IDE integration and made plans to experiment toward that end. The lang team laid out a HUGE list of potential new features, from things that are almost ready to stabilize with a little polishing to pipe dreams that may have no real future in Rust at all. And, with several meeting rooms running simultaneously, I couldn&amp;#8217;t possibly catch it all. I hope other attendees will blog about their results and share more information.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F22%2Frust-all-hands-2019-array-iterators-rayon-and-more%2F&amp;#38;linkname=Rust%20All%20Hands%202019%3A%20Array%20iterators%2C%20Rayon%2C%20and%20more" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F22%2Frust-all-hands-2019-array-iterators-rayon-and-more%2F&amp;#38;linkname=Rust%20All%20Hands%202019%3A%20Array%20iterators%2C%20Rayon%2C%20and%20more" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F22%2Frust-all-hands-2019-array-iterators-rayon-and-more%2F&amp;#38;linkname=Rust%20All%20Hands%202019%3A%20Array%20iterators%2C%20Rayon%2C%20and%20more" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F22%2Frust-all-hands-2019-array-iterators-rayon-and-more%2F&amp;#38;linkname=Rust%20All%20Hands%202019%3A%20Array%20iterators%2C%20Rayon%2C%20and%20more" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F22%2Frust-all-hands-2019-array-iterators-rayon-and-more%2F&amp;#38;linkname=Rust%20All%20Hands%202019%3A%20Array%20iterators%2C%20Rayon%2C%20and%20more" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F22%2Frust-all-hands-2019-array-iterators-rayon-and-more%2F&amp;#38;linkname=Rust%20All%20Hands%202019%3A%20Array%20iterators%2C%20Rayon%2C%20and%20more" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F22%2Frust-all-hands-2019-array-iterators-rayon-and-more%2F&amp;#38;linkname=Rust%20All%20Hands%202019%3A%20Array%20iterators%2C%20Rayon%2C%20and%20more" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F22%2Frust-all-hands-2019-array-iterators-rayon-and-more%2F&amp;#38;linkname=Rust%20All%20Hands%202019%3A%20Array%20iterators%2C%20Rayon%2C%20and%20more" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F22%2Frust-all-hands-2019-array-iterators-rayon-and-more%2F&amp;#038;title=Rust%20All%20Hands%202019%3A%20Array%20iterators%2C%20Rayon%2C%20and%20more" data-a2a-url="https://developers.redhat.com/blog/2019/03/22/rust-all-hands-2019-array-iterators-rayon-and-more/" data-a2a-title="Rust All Hands 2019: Array iterators, Rayon, and more"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/03/22/rust-all-hands-2019-array-iterators-rayon-and-more/"&gt;Rust All Hands 2019: Array iterators, Rayon, and more&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/opSyMUQk1a0" height="1" width="1" alt=""/&gt;</content><summary>A few weeks ago, I had the pleasure of attending the second annual Rust All Hands meeting, hosted by Mozilla at their Berlin office. The attendees were a mix of volunteers and corporate employees covering the full range of Rust development, including the compiler, language, libraries, docs, tools, operations, and community. Although I’m sure there will be an official summary of the meeting (like l...</summary><dc:creator>Josh Stone</dc:creator><dc:date>2019-03-22T07:05:51Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/03/22/rust-all-hands-2019-array-iterators-rayon-and-more/</feedburner:origLink></entry><entry><title>Hibernate Search 6.0.0.Alpha3 released!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/la_0AbyOV3s/" /><category term="elasticsearch" scheme="searchisko:content:tags" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="hibernate search" scheme="searchisko:content:tags" /><category term="lucene" scheme="searchisko:content:tags" /><category term="releases" scheme="searchisko:content:tags" /><author><name>Yoann Rodière</name></author><id>searchisko:content:id:jbossorg_blog-hibernate_search_6_0_0_alpha3_released</id><updated>2019-03-22T15:42:54Z</updated><published>2019-03-22T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We just published Hibernate Search 6.0.0.Alpha3, the third release for the still-in-development 6.0 branch. This release mainly adds support for more field types and predicates, and brings more consistent and less verbose APIs.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="getting-started-with-hibernate-search-6"&gt;&lt;a class="anchor" href="#getting-started-with-hibernate-search-6"&gt;&lt;/a&gt;Getting started with Hibernate Search 6&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you want to dive right into the new, shiny Hibernate Search 6, a good starting point is the &lt;a href="https://docs.jboss.org/hibernate/search/6.0/reference/en-US/html_single/#getting-started"&gt;getting started guide&lt;/a&gt; included in the reference documentation.&lt;/p&gt; &lt;/div&gt; &lt;div class="admonitionblock note"&gt; &lt;table&gt; &lt;tr&gt; &lt;td class="icon"&gt; &lt;i class="fa icon-note" title="Note"&gt;&lt;/i&gt; &lt;/td&gt; &lt;td class="content"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Hibernate Search 6 is still in development and its APIs differ significantly from Search 5.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For more information about the current status of this branch, see &lt;a href="http://hibernate.org/search/releases/6.0/#whats-new"&gt;the page dedicated to Search 6 on hibernate.org&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For more information about migration and what we intend to do to help you, see &lt;a href="http://hibernate.org/search/documentation/migrate/6.0/"&gt;the migration guide&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-s-new"&gt;&lt;a class="anchor" href="#what-s-new"&gt;&lt;/a&gt;What’s new&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;It’s been a long time since the last release. But this also means we’ve made a lot of progress!&lt;/p&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="quarkus-integration"&gt;&lt;a class="anchor" href="#quarkus-integration"&gt;&lt;/a&gt;Quarkus integration&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You may have heard of &lt;a href="https://quarkus.io/"&gt;Quarkus&lt;/a&gt;, a framework and toolset aiming at dramatically improving the boot time and memory usage of Java applications.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3523"&gt;We’ve been working&lt;/a&gt; on integrating Hibernate Search into Quarkus, and an experimental Quarkus Extension should be released soon. Stay tuned!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="most-basic-java-types-can-now-be-indexed"&gt;&lt;a class="anchor" href="#most-basic-java-types-can-now-be-indexed"&gt;&lt;/a&gt;Most basic Java types can now be indexed&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In &lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3047"&gt;HSEARCH-3047&lt;/a&gt; and &lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3503"&gt;HSEARCH-3503&lt;/a&gt;, we restored the ability to index most basic Java types.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The following types are now supported:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.lang.String&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.lang.Character&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.lang.Byte&lt;/code&gt;, &lt;code&gt;byte&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.lang.Short&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.lang.Integer&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.lang.Long&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.lang.Double&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.lang.Float&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.lang.Boolean&lt;/code&gt;, &lt;code&gt;boolean&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.net.URI&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.net.URL&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.time.Instant&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.time.LocalDate&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.time.LocalTime&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.time.LocalDateTime&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.time.OffsetDateTime&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.time.OffsetTime&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.time.ZonedDateTime&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.time.ZoneId&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.time.ZoneOffset&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.time.Period&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.time.Duration&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.time.Year&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.time.YearMonth&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.time.MonthDay&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.util.UUID&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.util.Calendar&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.util.Date&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.sql.Timestamp&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.sql.Date&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.sql.Time&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The only notable types that aren’t supported yet are &lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3487"&gt;&lt;code&gt;BigDecimal&lt;/code&gt; and &lt;code&gt;BigInteger&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;See the documentation for more information:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://docs.jboss.org/hibernate/search/6.0/reference/en-US/html_single/#mapper-orm-bridge-valuebridge-builtin"&gt;Indexable types&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://docs.jboss.org/hibernate/search/6.0/reference/en-US/html_single/#mapper-orm-bridge-identifierbridge-builtin"&gt;Document ID types&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="most-search-predicates-are-now-implemented"&gt;&lt;a class="anchor" href="#most-search-predicates-are-now-implemented"&gt;&lt;/a&gt;Most search predicates are now implemented&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In Alpha2, only some of the search predicates were implemented:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;matchAll&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;id&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;bool&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;match&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;range&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;nested&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;spatial "within" (distance)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In &lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3091"&gt;HSEARCH-3091&lt;/a&gt; and &lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3256"&gt;HSEARCH-3256&lt;/a&gt;, we made sure that most predicate options available in Search 5 are available in Search 6 (only the &lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3312"&gt;analyzer override&lt;/a&gt; is missing).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In &lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3089"&gt;HSEARCH-3089&lt;/a&gt;, we implemented the following predicates:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;phrase&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;wildcard&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;simpleQueryString&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Bringing us almost on par with Search 5, with only &lt;code&gt;facet&lt;/code&gt; and &lt;code&gt;moreLikeThis&lt;/code&gt; missing.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="unified-more-straightforward-apis"&gt;&lt;a class="anchor" href="#unified-more-straightforward-apis"&gt;&lt;/a&gt;Unified, more straightforward APIs&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We’ve been hard at work to make the change of APIs in Search 6 really worth it.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The previous releases made sure that APIs were more powerful, allowing in particular to safely create predicates targeting multiple indexes, or to create type-safe queries.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In this release, we ensured that the names were more consistent, more straightforward and less verbose than in Search 5.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Below is a query as you would write it in Search 5.&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="JAVA"&gt;FullTextSession ftSession = Search.getFullTextSession(session); QueryBuilder bookQb = ftSession.getSearchFactory().buildQueryBuilder().forEntity(&lt;span style="color:#0a8;font-weight:bold"&gt;Book&lt;/span&gt;.class).get(); QueryBuilder dvdQb = ftSession.getSearchFactory().buildQueryBuilder().forEntity(Dvd.class).get(); &lt;span style="color:#777"&gt;// Find all long documents: books with more than 500 pages or dvd lasting more than 2 hours&lt;/span&gt; &lt;span style="color:#0a8;font-weight:bold"&gt;Query&lt;/span&gt; luceneQuery = bookQb.bool() .should(bookQb.range().onField(&lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;pageCount&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;).above(&lt;span style="color:#00D"&gt;500&lt;/span&gt;).createQuery()) .should(dvdQb.range().onField(&lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;durationInMinutes&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;).above(&lt;span style="color:#00D"&gt;120&lt;/span&gt;).createQuery()) .createQuery(); FullTextQuery query = ftSession.createFullTextQuery(luceneQuery, &lt;span style="color:#0a8;font-weight:bold"&gt;Book&lt;/span&gt;.class, Dvd.class); query.setMaxResults(pageSize).setFirstResult(selectedPage*pageSize); &lt;span style="color:#777"&gt;// Pagination&lt;/span&gt; &lt;span style="color:#007"&gt;@SuppressWarnings&lt;/span&gt;(&lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;unchecked&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span style="color:#0a8;font-weight:bold"&gt;List&lt;/span&gt;&amp;lt;&lt;span style="color:#0a8;font-weight:bold"&gt;Document&lt;/span&gt;&amp;gt; results = query.list();&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Below is an equivalent query in Search 6 Alpha1/Alpha2: no more per-type query builders, no more "lucene query", no more dodgy raw types that must be casted.&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="JAVA"&gt;FullTextSession ftSession = Search.getFullTextSession(session); FullTextQuery&amp;lt;&lt;span style="color:#0a8;font-weight:bold"&gt;Document&lt;/span&gt;&amp;gt; query = ftSession.search(&lt;span style="color:#0a8;font-weight:bold"&gt;Arrays&lt;/span&gt;.asList(&lt;span style="color:#0a8;font-weight:bold"&gt;Book&lt;/span&gt;.class, Dvd.class)).query().asEntity() .predicate(f -&amp;gt; f.bool() .should(f.range().onField(&lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;pageCount&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;).above(&lt;span style="color:#00D"&gt;500&lt;/span&gt;)) .should(f.range().onField(&lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;durationInMinutes&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;).above(&lt;span style="color:#00D"&gt;120&lt;/span&gt;)) .toPredicate() ) .build(); query.setMaxResults(pageSize).setFirstResult(selectedPage*pageSize); &lt;span style="color:#777"&gt;// Pagination&lt;/span&gt; &lt;span style="color:#0a8;font-weight:bold"&gt;List&lt;/span&gt;&amp;lt;&lt;span style="color:#0a8;font-weight:bold"&gt;Document&lt;/span&gt;&amp;gt; results = query.list();&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;And below is an equivalent query in Search 6 Alpha3: no more meaningless &lt;code&gt;query()&lt;/code&gt; or &lt;code&gt;toPredicate()&lt;/code&gt; calls, a unified naming for all types (prefixed with &lt;code&gt;Search&lt;/code&gt;) and a unified method name to retrieve results (&lt;code&gt;fetch&lt;/code&gt;, &lt;code&gt;fetchHits&lt;/code&gt;, &lt;code&gt;fetchCount&lt;/code&gt;, …​)&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="JAVA"&gt;SearchSession searchSession = Search.getSearchSession(session); SearchQuery&amp;lt;&lt;span style="color:#0a8;font-weight:bold"&gt;Document&lt;/span&gt;&amp;gt; query = searchSession.search(&lt;span style="color:#0a8;font-weight:bold"&gt;Arrays&lt;/span&gt;.asList(&lt;span style="color:#0a8;font-weight:bold"&gt;Book&lt;/span&gt;.class, Dvd.class)).asEntity() .predicate(f -&amp;gt; f.bool() .should(f.range().onField(&lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;pageCount&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;).above(&lt;span style="color:#00D"&gt;500&lt;/span&gt;)) .should(f.range().onField(&lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;durationInMinutes&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;).above(&lt;span style="color:#00D"&gt;120&lt;/span&gt;)) ) .toQuery(); &lt;span style="color:#0a8;font-weight:bold"&gt;List&lt;/span&gt;&amp;lt;&lt;span style="color:#0a8;font-weight:bold"&gt;Document&lt;/span&gt;&amp;gt; results = query.fetchHits(pageSize, selectedPage*pageSize);&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For details, see:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3444"&gt;HSEARCH-3444&lt;/a&gt;: Reduce the verbosity of the predicate/projection/sort DSLs and index schema DSL&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3403"&gt;HSEARCH-3403&lt;/a&gt;: Remove the inheritance from FullTextQuery/FullTextSession to the corresponding Hibernate ORM types&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3498"&gt;HSEARCH-3498&lt;/a&gt;: Move optional predicate DSL parameters to the terminal contexts&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3511"&gt;HSEARCH-3511&lt;/a&gt;: Make the entry points to the Search API more intuitive&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We also changed the syntax for adding values to documents in bridges: see &lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3295"&gt;HSEARCH-3295&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;And finally, we made the names of configuration properties more consistent between the Elasticsearch and Lucene backend: &lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3482"&gt;HSEARCH-3482&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="documentation"&gt;&lt;a class="anchor" href="#documentation"&gt;&lt;/a&gt;Documentation&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The documentation is still sparse, but it continues to grow. We documented in particular the configuration properties (&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3473"&gt;HSEARCH-3473&lt;/a&gt;, see &lt;a href="https://docs.jboss.org/hibernate/search/6.0/reference/en-US/html_single/#configuration"&gt;here&lt;/a&gt;) and the limitations of using the date/time types from &lt;code&gt;java.util&lt;/code&gt; (&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3509"&gt;HSEARCH-3509&lt;/a&gt;, see &lt;a href="https://docs.jboss.org/hibernate/search/6.0/reference/en-US/html_single/#mapper-orm-legacy-date-time-apis"&gt;here&lt;/a&gt;).&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="version-upgrades"&gt;&lt;a class="anchor" href="#version-upgrades"&gt;&lt;/a&gt;Version upgrades&lt;/h3&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3483"&gt;HSEARCH-3483&lt;/a&gt;: Upgrade to Lucene 7.7.0&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3520"&gt;HSEARCH-3520&lt;/a&gt;: Upgrade to Elasticsearch 6.6.2&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3490"&gt;HSEARCH-3490&lt;/a&gt;: There is now experimental support for Elasticsearch 7.0.0-beta1.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3514"&gt;HSEARCH-3514&lt;/a&gt;: We restored automatic Java module names to our JARs, which can thus be safely referenced from your &lt;code&gt;module-info.java&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3485"&gt;HSEARCH-3485&lt;/a&gt;, &lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3493"&gt;HSEARCH-3493&lt;/a&gt;: Hibernate Search still targets JDK8 and JDK11, but now we also test compatibility with JDK12 and JDK13 regularly.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="other-improvements-and-bug-fixes"&gt;&lt;a class="anchor" href="#other-improvements-and-bug-fixes"&gt;&lt;/a&gt;Other improvements and bug fixes&lt;/h3&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3424"&gt;HSEARCH-3424&lt;/a&gt;: The showcase module now uses Spring Boot, for a more realistic example of how to use Hibernate Search in an application. See &lt;a href="https://github.com/hibernate/hibernate-search/tree/master/integrationtest/showcase/library"&gt;the code on GitHub&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3257"&gt;HSEARCH-3257&lt;/a&gt;: Allow to bypass bridges in projections&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-2658"&gt;HSEARCH-2658&lt;/a&gt;: Support @Inject in all user-provided components: bridges, configurers, …​&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-1640"&gt;HSEARCH-1640&lt;/a&gt;: boolean field should never be analyzed&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-2908"&gt;HSEARCH-2908&lt;/a&gt;: Incorrect mapping for 'java.lang.Short and java.lang.Byte' fields with Elasticsearch.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3481"&gt;HSEARCH-3481&lt;/a&gt;: Change max_connections_per_route default value to 10&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3251"&gt;HSEARCH-3251&lt;/a&gt;: Avoid "fuzzy" query in Elasticsearch and prefer "match" query with "fuzziness" parameter&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-2248"&gt;HSEARCH-2248&lt;/a&gt;: Remove deprecated threshold method for fuzzy queries from the DSL&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3477"&gt;HSEARCH-3477&lt;/a&gt;: Wrong incompatible types error when query a full text field across different indexes on Lucene backend&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3489"&gt;HSEARCH-3489&lt;/a&gt;: Improve the error message when the inverse side of an association cannot be found by Hibernate Search&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3529"&gt;HSEARCH-3529&lt;/a&gt;: MassIndexer fails for entities with primitive ID type&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;And more. For a full list of changes since the previous releases, please see the &lt;a href="https://hibernate.atlassian.net/secure/ReleaseNote.jspa?projectId=10061&amp;amp;version=31753"&gt;release notes&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="how-to-get-this-release"&gt;&lt;a class="anchor" href="#how-to-get-this-release"&gt;&lt;/a&gt;How to get this release&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;All details are available and up to date on the &lt;a href="http://hibernate.org/search/releases/6.0/#get-it"&gt;dedicated page on hibernate.org&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="feedback-issues-ideas"&gt;&lt;a class="anchor" href="#feedback-issues-ideas"&gt;&lt;/a&gt;Feedback, issues, ideas?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To get in touch, use the following channels:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://stackoverflow.com/questions/tagged/hibernate-search"&gt;hibernate-search tag on Stackoverflow&lt;/a&gt; (usage questions)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/c/hibernate-search"&gt;User forum&lt;/a&gt; (usage questions, general feedback)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH"&gt;Issue tracker&lt;/a&gt; (bug reports, feature requests)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://lists.jboss.org/pipermail/hibernate-dev/"&gt;Mailing list&lt;/a&gt; (development-related discussions)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/la_0AbyOV3s" height="1" width="1" alt=""/&gt;</content><summary>We just published Hibernate Search 6.0.0.Alpha3, the third release for the still-in-development 6.0 branch. This release mainly adds support for more field types and predicates, and brings more consistent and less verbose APIs. Getting started with Hibernate Search 6 If you want to dive right into the new, shiny Hibernate Search 6, a good starting point is the getting started guide included in the...</summary><dc:creator>Yoann Rodière</dc:creator><dc:date>2019-03-22T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2019/03/22/hibernate-search-6-0-0-Alpha3/</feedburner:origLink></entry><entry><title>How to debug code in CodeReady Workspaces</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/HTBmtIw8tbE/" /><category term="CodeReady Workspaces" scheme="searchisko:content:tags" /><category term="debugging" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Red Hat CodeReady Workspaces" scheme="searchisko:content:tags" /><author><name>veermuchandi</name></author><id>searchisko:content:id:jbossorg_blog-how_to_debug_code_in_codeready_workspaces</id><updated>2019-03-21T13:11:09Z</updated><published>2019-03-21T13:11:09Z</published><content type="html">&lt;p&gt;Find out how to configure the &lt;a href="https://developers.redhat.com/products/codeready-workspaces/overview/"&gt;CodeReady workspace&lt;/a&gt; for debugging, set up breakpoints, and debug the application using the integrated browser-based IDE in the workspace. The steps explained in this video are also available in the tutorial &lt;a href="https://github.com/RedHatWorkshops/CodeReadyWorkspacesAndLauncherTutorial/blob/master/DebuggingUsingCodeReadyWorkspaces.md"&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;span id="more-574627"&gt;&lt;/span&gt;&lt;br /&gt; &lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/lAjP6ZvZ9mY?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2019/03/18/getting-started-with-codeready-workspaces-and-red-hat-openshift-application-runtimes/"&gt;Part 1: &lt;/a&gt;&lt;a href="https://developers.redhat.com/blog/2019/03/18/getting-started-with-codeready-workspaces-and-red-hat-openshift-application-runtimes/"&gt;Getting started with CodeReady Workspaces and Red Hat OpenShift Application Runtimes launcher&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2019/03/19/create-application-red-hat-openshift-application-runtimes/"&gt;Part 2: How to create a new application with Red Hat OpenShift Application Runtimes launcher&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2019/03/20/how-to-edit-and-test-application-code-in-codeready-workspaces/"&gt;Part 3: How to edit and test application code in CodeReady Workspaces&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F21%2Fhow-to-debug-code-in-codeready-workspaces%2F&amp;#38;linkname=How%20to%20debug%20code%20in%20CodeReady%20Workspaces" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F21%2Fhow-to-debug-code-in-codeready-workspaces%2F&amp;#38;linkname=How%20to%20debug%20code%20in%20CodeReady%20Workspaces" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F21%2Fhow-to-debug-code-in-codeready-workspaces%2F&amp;#38;linkname=How%20to%20debug%20code%20in%20CodeReady%20Workspaces" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F21%2Fhow-to-debug-code-in-codeready-workspaces%2F&amp;#38;linkname=How%20to%20debug%20code%20in%20CodeReady%20Workspaces" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F21%2Fhow-to-debug-code-in-codeready-workspaces%2F&amp;#38;linkname=How%20to%20debug%20code%20in%20CodeReady%20Workspaces" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F21%2Fhow-to-debug-code-in-codeready-workspaces%2F&amp;#38;linkname=How%20to%20debug%20code%20in%20CodeReady%20Workspaces" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F21%2Fhow-to-debug-code-in-codeready-workspaces%2F&amp;#38;linkname=How%20to%20debug%20code%20in%20CodeReady%20Workspaces" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F21%2Fhow-to-debug-code-in-codeready-workspaces%2F&amp;#38;linkname=How%20to%20debug%20code%20in%20CodeReady%20Workspaces" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F21%2Fhow-to-debug-code-in-codeready-workspaces%2F&amp;#038;title=How%20to%20debug%20code%20in%20CodeReady%20Workspaces" data-a2a-url="https://developers.redhat.com/blog/2019/03/21/how-to-debug-code-in-codeready-workspaces/" data-a2a-title="How to debug code in CodeReady Workspaces"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/03/21/how-to-debug-code-in-codeready-workspaces/"&gt;How to debug code in CodeReady Workspaces&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/HTBmtIw8tbE" height="1" width="1" alt=""/&gt;</content><summary>Find out how to configure the CodeReady workspace for debugging, set up breakpoints, and debug the application using the integrated browser-based IDE in the workspace. The steps explained in this video are also available in the tutorial here. Part 1: Getting started with CodeReady Workspaces and Red Hat OpenShift Application Runtimes launcher Part 2: How to create a new application with Red Hat Op...</summary><dc:creator>veermuchandi</dc:creator><dc:date>2019-03-21T13:11:09Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/03/21/how-to-debug-code-in-codeready-workspaces/</feedburner:origLink></entry><entry><title>Containers, Kubernetes, and microservices: Start here</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ohaL6S65IT0/" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="developer" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="serverless" scheme="searchisko:content:tags" /><author><name>Don Schenck</name></author><id>searchisko:content:id:jbossorg_blog-containers_kubernetes_and_microservices_start_here</id><updated>2019-03-21T07:00:34Z</updated><published>2019-03-21T07:00:34Z</published><content type="html">&lt;p&gt;Although &lt;a href="https://developers.redhat.com/blog/category/containers/"&gt;containers&lt;/a&gt; and &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt; and &lt;a href="https://developers.redhat.com/topics/microservices/"&gt;microservices&lt;/a&gt; seem to come up in every conversation, there&amp;#8217;s a big chasm between talking about, demonstrating, and actually &lt;em&gt;using&lt;/em&gt; a technology in production. Anyone can discuss containers, many people can demo them, but far fewer are successfully using containers and Kubernetes in a microservices architecture.&lt;/p&gt; &lt;p&gt;Why? There are likely many reasons, but a simple one may be that developers don&amp;#8217;t know where to start.&lt;/p&gt; &lt;p&gt;Consider this series of articles your starting point. Relax, read on, and get ready to enter the exciting world of containers, Kubernetes, and microservices.&lt;/p&gt; &lt;p&gt;&lt;span id="more-566997"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Parlez-vous C#?&lt;/h2&gt; &lt;p&gt;To begin, let&amp;#8217;s be inclusive. Your favorite programming language is available in &lt;a href="https://developers.redhat.com/topics/linux/"&gt;Linux containers&lt;/a&gt;. Whether you&amp;#8217;re a .NET veteran or a Swift beginner, you&amp;#8217;ll find that you can use containers. Get this: You can even create containers to run &lt;a href="https://opensource.com/article/17/8/what-about-cobol"&gt;COBOL&lt;/a&gt; programs. You don&amp;#8217;t have to give up your favorite coding language to enter the world of Linux containers; put that excuse aside.&lt;/p&gt; &lt;h2&gt;What are Containers?&lt;/h2&gt; &lt;p&gt;Containers are the result of executing an image. Yeah, that&amp;#8217;s not the most helpful definition. It&amp;#8217;s &lt;em&gt;accurate&lt;/em&gt;, but not helpful.&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s start with understanding an image, because an image runs in a container.&lt;/p&gt; &lt;h2&gt;What is an image?&lt;/h2&gt; &lt;p&gt;An image is a snapshot of an environment that can be executed—started, powered on, etc. Years ago, before the cloud, when all we had were PCs, a common way to duplicate a PC was to use a software tool that would make a perfect copy of a hard drive—an &amp;#8220;image&amp;#8221; of that drive. You could then take that hard drive, put it in another PC, and you&amp;#8217;d have a duplicate of the original machine. This approach was very popular in corporate environments to ensure everyone had the same PC configuration.&lt;/p&gt; &lt;p&gt;So, think about that in terms of virtual computing. Instead of copying from one hard drive to another, you can copy from a virtual machine (VM) to a file, which can then be sent around the network. That file can be copied to another VM and be booted, and there you have a copy of the first VM. That was standard operating procedure circa 2013 when scaling up an application meant spinning up more VMs to handle the workload.&lt;/p&gt; &lt;h2&gt;Enter LXC&lt;/h2&gt; &lt;p&gt;Even though Unix containers date back to 1979 (surprised? I know I was), Linux containers really got their foundation in 2008 with the introduction of &lt;a href="https://linuxcontainers.org/"&gt;LinuX Containers (&lt;/a&gt;&lt;a href="https://linuxcontainers.org/"&gt;LXC&lt;/a&gt;&lt;a href="https://linuxcontainers.org/"&gt;)&lt;/a&gt;. Even so, that technology didn&amp;#8217;t really take off until 2013 when Docker exploded in popularity.&lt;/p&gt; &lt;p&gt;Imagine that, instead of cloning an entire VM, you could copy one executable program and put that into an image. And, imagine that the image didn&amp;#8217;t need the operating system (OS) inside of it. Instead, it simply has to conform to the kernel of the underlying operating system (i.e., all the system calls are compatible with, say, the Linux kernel). That means the image can be run on practically &lt;em&gt;any&lt;/em&gt; Linux system, because it&amp;#8217;s only using the kernel. Now you have a portable application, which, by the way, starts incredibly quickly because the OS is already running on the host system.&lt;/p&gt; &lt;p&gt;That&amp;#8217;s a Linux image. It runs in a container. When it&amp;#8217;s actually running, it&amp;#8217;s a container. You may hear the terms used interchangeably. Although that&amp;#8217;s not technically correct, just understand and go with it.&lt;/p&gt; &lt;p&gt;These images are smaller than comparable VMs; they can be shared and passed around as files, and they start up quickly. Because it&amp;#8217;s standard practice to make an image as small as possible, a lot of work goes into making smaller components to go inside them. For example, you need &lt;em&gt;some&lt;/em&gt; part of an operating system in order to talk to the Linux kernel, so vendors (e.g., &lt;a href="https://www.redhat.com/en/about/press-releases/red-hat-unveils-roadmap-coreos-integration-red-hat-openshift"&gt;Red Hat Enterprise Linux CoreOS&lt;/a&gt;) are doing what they can to make things more compact. Even .NET Core plays well because it is now shipped and installed in parts only as needed. That means a web site that formerly ran in Internet Information Service (IIS) using .NET Framework and took several gigabytes of space could now occupy, for example, 700 megabytes. Figure 1 shows a comparison of VMs and containers.&lt;/p&gt; &lt;div id="attachment_567767" style="width: 650px" class="wp-caption alignnone"&gt;&lt;img aria-describedby="caption-attachment-567767" class="wp-image-567767 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/02/vm_vs_container-1024x485.png" alt="" width="640" height="303" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/02/vm_vs_container-1024x485.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/02/vm_vs_container-300x142.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/02/vm_vs_container-768x364.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/02/vm_vs_container.png 1296w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-567767" class="wp-caption-text"&gt;Figure 1: Virtual machines compared with containers.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;How can I get started?&lt;/h2&gt; &lt;p&gt;Where you go to get started depends on your machine, specifically on which operating system you&amp;#8217;re running. MacOS, Windows, and Linux have different requirements for running Linux containers.&lt;/p&gt; &lt;h3&gt;MacOS&lt;/h3&gt; &lt;p&gt;The instructions can be found on &lt;a href="https://docs.docker.com/docker-for-mac/install/"&gt;this installation page&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;Windows&lt;/h3&gt; &lt;p&gt;Microsoft has instructions on their page for &lt;a href="https://docs.microsoft.com/en-us/virtualization/windowscontainers/quick-start/quick-start-windows-10-linux"&gt;Linux Containers on Windows 10&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;Fedora&lt;/h3&gt; &lt;p&gt;This is my favorite. There are two tools that you can use on Fedora: Buildah and Podman. To install them, simply type &lt;code&gt;buildah&lt;/code&gt; at a terminal command line and follow the prompts to install. Likewise, type &lt;code&gt;podman&lt;/code&gt; at the terminal command line and follow the prompts.&lt;/p&gt; &lt;h3&gt;Red Hat Enterprise Linux&lt;/h3&gt; &lt;p&gt;One quick command, &lt;code&gt;yum install buildah podman&lt;/code&gt;, and you&amp;#8217;re up and running.&lt;/p&gt; &lt;h3&gt;Other Linux distros&lt;/h3&gt; &lt;p&gt;You can find the necessary steps starting with &lt;a href="https://docs.docker.com/install/"&gt;this installation page&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;What is this daemon?&lt;/h2&gt; &lt;p&gt;If you are using Docker as your container engine, note that it requires a daemon to be running. This process will be transparent to you, but it does consume CPU cycles and you may occasionally see messages about or from it. The daemon must be running in order to build an image.&lt;/p&gt; &lt;p&gt;If you&amp;#8217;re using &lt;a href="https://developers.redhat.com/blog/2019/02/21/podman-and-buildah-for-docker-users/"&gt;Buildah&lt;/a&gt; and &lt;a href="https://developers.redhat.com/blog/2018/08/29/intro-to-podman/"&gt;Podman&lt;/a&gt;, &lt;a href="https://www.redhat.com/en/blog/daemon-haunted-container-world-no-longer-introducing-buildah-10"&gt;you don&amp;#8217;t need any daemons&lt;/a&gt;. They were architected from the start with this in mind. Like a lot of software projects, they benefited from the past and made improvements.&lt;/p&gt; &lt;h2&gt;What&amp;#8217;s next?&lt;/h2&gt; &lt;p&gt;Next, I&amp;#8217;ll show how to build and run a &amp;#8220;Hello World&amp;#8221; app in the language of your choice, which will be covered in the next article.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F21%2Fcontainers-kubernetes-and-microservices-start-here%2F&amp;#38;linkname=Containers%2C%20Kubernetes%2C%20and%20microservices%3A%20Start%20here" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F21%2Fcontainers-kubernetes-and-microservices-start-here%2F&amp;#38;linkname=Containers%2C%20Kubernetes%2C%20and%20microservices%3A%20Start%20here" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F21%2Fcontainers-kubernetes-and-microservices-start-here%2F&amp;#38;linkname=Containers%2C%20Kubernetes%2C%20and%20microservices%3A%20Start%20here" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F21%2Fcontainers-kubernetes-and-microservices-start-here%2F&amp;#38;linkname=Containers%2C%20Kubernetes%2C%20and%20microservices%3A%20Start%20here" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F21%2Fcontainers-kubernetes-and-microservices-start-here%2F&amp;#38;linkname=Containers%2C%20Kubernetes%2C%20and%20microservices%3A%20Start%20here" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F21%2Fcontainers-kubernetes-and-microservices-start-here%2F&amp;#38;linkname=Containers%2C%20Kubernetes%2C%20and%20microservices%3A%20Start%20here" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F21%2Fcontainers-kubernetes-and-microservices-start-here%2F&amp;#38;linkname=Containers%2C%20Kubernetes%2C%20and%20microservices%3A%20Start%20here" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F21%2Fcontainers-kubernetes-and-microservices-start-here%2F&amp;#38;linkname=Containers%2C%20Kubernetes%2C%20and%20microservices%3A%20Start%20here" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F21%2Fcontainers-kubernetes-and-microservices-start-here%2F&amp;#038;title=Containers%2C%20Kubernetes%2C%20and%20microservices%3A%20Start%20here" data-a2a-url="https://developers.redhat.com/blog/2019/03/21/containers-kubernetes-and-microservices-start-here/" data-a2a-title="Containers, Kubernetes, and microservices: Start here"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/03/21/containers-kubernetes-and-microservices-start-here/"&gt;Containers, Kubernetes, and microservices: Start here&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ohaL6S65IT0" height="1" width="1" alt=""/&gt;</content><summary>Although containers and Kubernetes and microservices seem to come up in every conversation, there’s a big chasm between talking about, demonstrating, and actually using a technology in production. Anyone can discuss containers, many people can demo them, but far fewer are successfully using containers and Kubernetes in a microservices architecture. Why? There are likely many reasons, but a simple ...</summary><dc:creator>Don Schenck</dc:creator><dc:date>2019-03-21T07:00:34Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/03/21/containers-kubernetes-and-microservices-start-here/</feedburner:origLink></entry><entry><title>Getting started with the updated VS Code Yeoman extension for Camel projects</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/vGUIFo3TXLM/" /><category term="Camel" scheme="searchisko:content:tags" /><category term="community" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="JBoss Fuse" scheme="searchisko:content:tags" /><category term="VS Code" scheme="searchisko:content:tags" /><category term="VS Code Extensions" scheme="searchisko:content:tags" /><category term="Yeoman" scheme="searchisko:content:tags" /><author><name>Brian Fitzpatrick</name></author><id>searchisko:content:id:jbossorg_blog-getting_started_with_the_updated_vs_code_yeoman_extension_for_camel_projects</id><updated>2019-03-21T07:00:20Z</updated><published>2019-03-21T07:00:20Z</published><content type="html">&lt;p&gt;The &lt;a href="https://code.visualstudio.com/"&gt;Visual Studio (VS) Code IDE&lt;/a&gt; is one of the most-used platforms for JavaScript, C#, and Python developers and is quickly becoming one of the &lt;a href="https://developers.redhat.com/blog/category/vs-code/"&gt;top three tooling environments at Red Hat&lt;/a&gt;. VS Code is highly customizable and offers a healthy and growing marketplace for extensions of all types and technologies, including an extension for &lt;a href="https://yeoman.io/"&gt;Yeoman&lt;/a&gt;. In this article, I&amp;#8217;ll explain how to get started using the updated extension that works with latest versions of VS Code.&lt;br /&gt; &lt;span id="more-570557"&gt;&lt;/span&gt;&lt;br /&gt; Yeoman, as you might remember from my previous article (&lt;a href="https://developers.redhat.com/blog/2019/01/07/using-the-yeoman-camel-project-generator-to-jump-start-a-project/"&gt;Jump start Camel projects with the new Yeoman-based project generator&lt;/a&gt;), describes itself as “…a generic scaffolding system allowing the creation of any kind of app. It allows for rapidly getting started on new projects and streamlines the maintenance of existing projects.” In an agnostic way, Yeoman lets users piece together entire projects or just parts.&lt;/p&gt; &lt;p&gt;We have used Yeoman not only for creating our own &lt;a href="https://github.com/camel-tooling/generator-camel-project"&gt;Camel project generator&lt;/a&gt; but also for scaffolding new VS Code extensions. Red Hat and Apache Camel developers have created quite a few extensions recently, including the &lt;a href="https://marketplace.visualstudio.com/items?itemName=redhat.java"&gt;Language Support for Java(&lt;img src="https://s.w.org/images/core/emoji/11.2.0/72x72/2122.png" alt="™" class="wp-smiley" style="height: 1em; max-height: 1em;" /&gt;) by Red Hat&lt;/a&gt;, the &lt;a href="https://marketplace.visualstudio.com/items?itemName=redhat.project-initializer"&gt;Project Initializer by Red Hat&lt;/a&gt;, and &lt;a href="https://marketplace.visualstudio.com/items?itemName=camel-tooling.vscode-apache-camel"&gt;Language Support for Apache Camel&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Unfortunately, the existing &lt;a href="https://marketplace.visualstudio.com/items?itemName=samverschueren.yo"&gt;VS Code extension for Yeoman&lt;/a&gt; has not been updated since mid-2017 and stopped working properly with the latest IDE sometime in 2018. To remedy that situation, we decided to create a fork and update it. The &lt;a href="https://github.com/camel-tooling/vscode-yeoman"&gt;new VS Code Yeoman project&lt;/a&gt; is just in the beginning stages, but it already includes the fix so that it now works in the latest versions of VS Code.&lt;/p&gt; &lt;h2&gt;Requirements&lt;/h2&gt; &lt;p&gt;Using the VS Code Yeoman extension requires a few items to already be present and installed on the system, including Node.js, NPM, and Yeoman. The VS Code documentation offers great pointers for ensuring that these are set up in your VS Code instance (see “&lt;a href="https://code.visualstudio.com/docs/setup/additional-components"&gt;Additional Components&lt;/a&gt;” in the SETUP guide).&lt;/p&gt; &lt;p&gt;Yeoman has its own &lt;a href="https://yeoman.io/generators/"&gt;marketplace of generators&lt;/a&gt; from which to choose, including our own &lt;a href="https://github.com/camel-tooling/generator-camel-project"&gt;Camel project generator&lt;/a&gt;. For details about installing and running the Camel-project generator, again see the “&lt;a href="https://developers.redhat.com/blog/2019/01/07/using-the-yeoman-camel-project-generator-to-jump-start-a-project/"&gt;Jump start Camel projects with the new yeoman-based project generator&lt;/a&gt;” article.&lt;/p&gt; &lt;h2&gt;Installing the VS Code Yeoman extension&lt;/h2&gt; &lt;p&gt;We have published a preview version of the updated VS Code Yeoman extension in the &lt;a href="https://marketplace.visualstudio.com/VSCode"&gt;VS Code Marketplace&lt;/a&gt; and you can find it listed &lt;a href="https://marketplace.visualstudio.com/items?itemName=camel-tooling.yo"&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;To install the extension in your VS Code instance, bring up the Extensions view by clicking on the Extensions icon in the Activity Bar on the side of VS Code or the View: Extensions command (Ctrl+Shift+X). In the marketplace text box, type &lt;code&gt;yo&lt;/code&gt;, then look for the &lt;code&gt;yo&lt;/code&gt; extension published by Camel Tooling (version 0.9.5 at this time) and click its Install button. When the installation is complete, reload your workbench, and the tool will be ready to use!&lt;/p&gt; &lt;h2&gt;Using the Yeoman extension&lt;/h2&gt; &lt;p&gt;Inside VS Code, press Ctrl+Shift+P to bring up the Command Palette and type &lt;code&gt;yeoman&lt;/code&gt;. When you hit Enter, you will be presented with a list of Yeoman generators that are installed and available for use. Once you select a generator, answer each question as it prompts to complete the process.&lt;/p&gt; &lt;p&gt;For example, to use the camel-project generator:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Create a directory for your new Camel project.&lt;/li&gt; &lt;li&gt;Open VS Code and open the directory (File-&amp;#62;Open Folder).&lt;/li&gt; &lt;li&gt;Press Ctrl+Shift+P to open the Command Palette and type &lt;code&gt;yeoman&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Select the camel-project generator (mouse click may be required).&lt;/li&gt; &lt;li&gt;Follow the prompts. Enter text to override the default values and press Enter. &lt;ul&gt; &lt;li&gt;Project Name (defaults to the name of the directory)&lt;/li&gt; &lt;li&gt;Camel version (defaults to 2.22.2)&lt;/li&gt; &lt;li&gt;Camel DSL (type &lt;code&gt;spring-boot&lt;/code&gt;)&lt;/li&gt; &lt;li&gt;Package name (defaults to “com.” + name of directory, but you may need to change it to be a valid Java-style package name)&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p&gt;When you are done, your directory will be populated with all necessary project files for a Mavenized Camel Spring Boot project that launches a simple timer.&lt;/p&gt; &lt;p&gt;You can open a terminal window and type &lt;code&gt;mvn install spring-boot:run&lt;/code&gt; to run the project locally. Or you can install the &lt;a href="https://marketplace.visualstudio.com/items?itemName=vscjava.vscode-maven"&gt;“Maven for Java” extension&lt;/a&gt; to execute a maven command through the Maven Projects sidebar:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;With the Maven for Java extension installed and populated (it should build the project once the Camel generator completes creating the artifacts), right-click on the root project POM and select Custom Goals.&lt;/li&gt; &lt;li&gt;Type &lt;code&gt;spring-boot:run&lt;/code&gt; and press Enter.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Your new Camel project should run in a new terminal window and eventually show log messages with a timer running at regular intervals.&lt;/p&gt; &lt;p&gt;Below is an example of the whole process:&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter size-full wp-image-570567 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/vscode-yeoman-1024x725.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/vscode-yeoman.gif" alt="" width="1077" height="762" /&gt;&lt;/p&gt; &lt;h2&gt;Future&lt;/h2&gt; &lt;p&gt;This was an interesting project to dive into, and I hope to work on it further. Going forward, we would like to improve the Yeoman extension in several places, including offering better prompts for the Camel project generator (and others) as a drop-down list, improving validation in the Command Palette input box, and potentially installing new Yeoman generators directly. However, getting a working extension is the first step!&lt;/p&gt; &lt;p&gt;For more information about the VS Code Yeoman extension itself, check out the &lt;a href="https://github.com/camel-tooling/vscode-yeoman"&gt;GitHub project page&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;For more information about the Camel project generator, check out the&lt;a href="https://www.npmjs.com/package/generator-camel-project"&gt; NPMJS page&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Also see the &lt;a href="https://developers.redhat.com/products/fuse/overview/"&gt;Red Hat Fuse&lt;/a&gt; page.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F21%2Fgetting-started-with-the-updated-vs-code-yeoman-extension-for-camel-projects%2F&amp;#38;linkname=Getting%20started%20with%20the%20updated%20VS%20Code%20Yeoman%20extension%20for%20Camel%20projects" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F21%2Fgetting-started-with-the-updated-vs-code-yeoman-extension-for-camel-projects%2F&amp;#38;linkname=Getting%20started%20with%20the%20updated%20VS%20Code%20Yeoman%20extension%20for%20Camel%20projects" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F21%2Fgetting-started-with-the-updated-vs-code-yeoman-extension-for-camel-projects%2F&amp;#38;linkname=Getting%20started%20with%20the%20updated%20VS%20Code%20Yeoman%20extension%20for%20Camel%20projects" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F21%2Fgetting-started-with-the-updated-vs-code-yeoman-extension-for-camel-projects%2F&amp;#38;linkname=Getting%20started%20with%20the%20updated%20VS%20Code%20Yeoman%20extension%20for%20Camel%20projects" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F21%2Fgetting-started-with-the-updated-vs-code-yeoman-extension-for-camel-projects%2F&amp;#38;linkname=Getting%20started%20with%20the%20updated%20VS%20Code%20Yeoman%20extension%20for%20Camel%20projects" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F21%2Fgetting-started-with-the-updated-vs-code-yeoman-extension-for-camel-projects%2F&amp;#38;linkname=Getting%20started%20with%20the%20updated%20VS%20Code%20Yeoman%20extension%20for%20Camel%20projects" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F21%2Fgetting-started-with-the-updated-vs-code-yeoman-extension-for-camel-projects%2F&amp;#38;linkname=Getting%20started%20with%20the%20updated%20VS%20Code%20Yeoman%20extension%20for%20Camel%20projects" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F21%2Fgetting-started-with-the-updated-vs-code-yeoman-extension-for-camel-projects%2F&amp;#38;linkname=Getting%20started%20with%20the%20updated%20VS%20Code%20Yeoman%20extension%20for%20Camel%20projects" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F21%2Fgetting-started-with-the-updated-vs-code-yeoman-extension-for-camel-projects%2F&amp;#038;title=Getting%20started%20with%20the%20updated%20VS%20Code%20Yeoman%20extension%20for%20Camel%20projects" data-a2a-url="https://developers.redhat.com/blog/2019/03/21/getting-started-with-the-updated-vs-code-yeoman-extension-for-camel-projects/" data-a2a-title="Getting started with the updated VS Code Yeoman extension for Camel projects"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/03/21/getting-started-with-the-updated-vs-code-yeoman-extension-for-camel-projects/"&gt;Getting started with the updated VS Code Yeoman extension for Camel projects&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/vGUIFo3TXLM" height="1" width="1" alt=""/&gt;</content><summary>The Visual Studio (VS) Code IDE is one of the most-used platforms for JavaScript, C#, and Python developers and is quickly becoming one of the top three tooling environments at Red Hat. VS Code is highly customizable and offers a healthy and growing marketplace for extensions of all types and technologies, including an extension for Yeoman. In this article, I’ll explain how to get started using th...</summary><dc:creator>Brian Fitzpatrick</dc:creator><dc:date>2019-03-21T07:00:20Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/03/21/getting-started-with-the-updated-vs-code-yeoman-extension-for-camel-projects/</feedburner:origLink></entry><entry><title>Hibernate Validator 6.0.16.Final released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/0B14xeUA-XM/" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="Hibernate Validator" scheme="searchisko:content:tags" /><category term="releases" scheme="searchisko:content:tags" /><author><name>Guillaume Smet</name></author><id>searchisko:content:id:jbossorg_blog-hibernate_validator_6_0_16_final_released</id><updated>2019-03-22T15:42:54Z</updated><published>2019-03-21T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We just released Hibernate Validator 6.0.16.Final which includes several improvements and bugfixes.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This is a recommended upgrade for everyone using Hibernate Validator and it is a drop-in replacement for 6.0.15.Final.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-s-new"&gt;&lt;a class="anchor" href="#what-s-new"&gt;&lt;/a&gt;What’s new&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="sect2"&gt; &lt;h3 id="performance-improvements"&gt;&lt;a class="anchor" href="#performance-improvements"&gt;&lt;/a&gt;Performance improvements&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We fixed a performance regression compared to 5.x when validating &lt;strong&gt;unconstrained&lt;/strong&gt; beans.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Note that Hibernate Validator 6.x is &lt;a href="http://in.relation.to/2018/03/20/bean-validation-benchmark-rerevisited/"&gt;significantly faster than 5.x&lt;/a&gt; and it keeps improving.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="rounding-error-with-min-max-decimalmin-decimalmax-constraints"&gt;&lt;a class="anchor" href="#rounding-error-with-min-max-decimalmin-decimalmax-constraints"&gt;&lt;/a&gt;Rounding error with @Min/@Max/@DecimalMin/@DecimalMax constraints&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;All the min/max constraints were affected by a &lt;a href="https://hibernate.atlassian.net/browse/HV-1699"&gt;rounding error&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="jdk-12-support"&gt;&lt;a class="anchor" href="#jdk-12-support"&gt;&lt;/a&gt;JDK 12 support&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Hibernate Validator is now also tested with JDK 12.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="windows-build"&gt;&lt;a class="anchor" href="#windows-build"&gt;&lt;/a&gt;Windows build&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;It was not possible to run the full build on Windows, it is fixed now.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="full-changelog"&gt;&lt;a class="anchor" href="#full-changelog"&gt;&lt;/a&gt;Full changelog&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The complete list of fixed issues can be found &lt;a href="https://hibernate.atlassian.net/issues/?jql=project%20%3D%20HV%20AND%20fixVersion%20%3D%206.0.16.Final%20order%20by%20created%20DESC"&gt;on our JIRA&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="getting-6-0-16-final"&gt;&lt;a class="anchor" href="#getting-6-0-16-final"&gt;&lt;/a&gt;Getting 6.0.16.Final&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To get the release with Maven, Gradle etc. use the following GAV coordinates:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;em&gt;org.hibernate.validator:hibernate-validator:6.0.16.Final&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;em&gt;org.hibernate.validator:hibernate-validator-cdi:6.0.16.Final&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;em&gt;org.hibernate.validator:hibernate-validator-annotation-processor:6.0.16.Final&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Note that the group id has changed from &lt;code&gt;org.hibernate&lt;/code&gt; (Hibernate Validator 5 and earlier) to &lt;code&gt;org.hibernate.validator&lt;/code&gt; (from Hibernate Validator 6 onwards).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Alternatively, a distribution bundle containing all the bits is provided on SourceForge (&lt;a href="http://sourceforge.net/projects/hibernate/files/hibernate-validator/6.0.16.Final/hibernate-validator-6.0.16.Final-dist.tar.gz/download"&gt;TAR.GZ&lt;/a&gt;, &lt;a href="http://sourceforge.net/projects/hibernate/files/hibernate-validator/6.0.16.Final/hibernate-validator-6.0.16.Final-dist.zip/download"&gt;ZIP&lt;/a&gt;).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you want to benefit from the new features of this version on WildFly, we also provide WildFly patches for &lt;a href="http://search.maven.org/remotecontent?filepath=org/hibernate/validator/hibernate-validator-modules/6.0.16.Final/hibernate-validator-modules-6.0.16.Final-wildfly-16.0.0.Final-patch.zip"&gt;WildFly 16&lt;/a&gt; and &lt;a href="http://search.maven.org/remotecontent?filepath=org/hibernate/validator/hibernate-validator-modules/6.0.16.Final/hibernate-validator-modules-6.0.16.Final-wildfly-15.0.1.Final-patch.zip"&gt;WildFly 15&lt;/a&gt;. You can read about how to apply such patches &lt;a href="https://docs.jboss.org/hibernate/stable/validator/reference/en-US/html_single/#_updating_hibernate_validator_in_wildfly"&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="feedback-issues-ideas"&gt;&lt;a class="anchor" href="#feedback-issues-ideas"&gt;&lt;/a&gt;Feedback, issues, ideas?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To get in touch, use the usual channels:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://stackoverflow.com/questions/tagged/hibernate-validator"&gt;hibernate-validator tag on Stack Overflow&lt;/a&gt; (usage questions)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/c/hibernate-validator"&gt;User forum&lt;/a&gt; (usage questions, general feedback)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HV"&gt;Issue tracker&lt;/a&gt; (bug reports, feature requests)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://lists.jboss.org/pipermail/hibernate-dev/"&gt;Mailing list&lt;/a&gt; (development-related discussions)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://lists.jboss.org/pipermail/beanvalidation-dev/"&gt;Bean Validation development mailing list&lt;/a&gt; (discussions about the Bean Validation specification)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/0B14xeUA-XM" height="1" width="1" alt=""/&gt;</content><summary>We just released Hibernate Validator 6.0.16.Final which includes several improvements and bugfixes. This is a recommended upgrade for everyone using Hibernate Validator and it is a drop-in replacement for 6.0.15.Final. What’s new Performance improvements We fixed a performance regression compared to 5.x when validating unconstrained beans. Note that Hibernate Validator 6.x is significantly faster ...</summary><dc:creator>Guillaume Smet</dc:creator><dc:date>2019-03-21T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2019/03/21/hibernate-validator-6016-final-out/</feedburner:origLink></entry><entry><title>Quarkus 0.12.0 released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/xofXtbbAgI8/" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="container" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="Modern App Dev" scheme="searchisko:content:tags" /><category term="quarkus" scheme="searchisko:content:tags" /><category term="serverless" scheme="searchisko:content:tags" /><author><name>John Clingan</name></author><id>searchisko:content:id:jbossorg_blog-quarkus_0_12_0_released</id><updated>2019-03-20T19:55:53Z</updated><published>2019-03-20T19:55:53Z</published><content type="html">&lt;p&gt;&lt;a href="https://developers.redhat.com/blog/2019/03/07/quarkus-next-generation-kubernetes-native-java-framework/"&gt;Quarkus&lt;/a&gt;, a next-generation &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt; native &lt;a href="https://developers.redhat.com/topics/enterprise-java/"&gt;Java&lt;/a&gt; framework, was announced in early March, and now Quarkus 0.12.0 has been released and is available from the Maven repository. The &lt;a href="https://github.com/quarkusio/quarkus-quickstarts"&gt;quickstarts&lt;/a&gt;, &lt;a href="https://quarkus.io/guides/"&gt;guides&lt;/a&gt;, and &lt;a href="https://quarkus.io"&gt;website&lt;/a&gt; also have been updated, and &lt;a href="https://github.com/quarkusio/quarkus/releases/tag/0.12.0"&gt;213 issues and PRs&lt;/a&gt; are included in this release. That’s quite a few updates, but in particular &lt;a href="https://quarkus.io/guides/"&gt;check out&lt;/a&gt; the new metrics, health check, and Kafka guides. Also, this release requires &lt;a href="https://github.com/oracle/graal/releases/tag/vm-1.0.0-rc13"&gt;GraalVM 1.0.0-RC13&lt;/a&gt; for &lt;i&gt;&lt;a href="https://quarkus.io/guides/building-native-image-guide"&gt;Building a Native Executable&lt;/a&gt;&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;&lt;span id="more-577447"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="text-decoration: underline;"&gt;&lt;strong&gt;BOM dependency&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; &lt;pre&gt;  &amp;#60;dependency&amp;#62;    &amp;#60;groupId&amp;#62;io.quarkus&amp;#60;/groupId&amp;#62;    &amp;#60;artifactId&amp;#62;quarkus-bom&amp;#60;/artifactId&amp;#62;    &amp;#60;version&amp;#62;0.12.0&amp;#60;/version&amp;#62;  &amp;#60;/dependency&amp;#62;&lt;/pre&gt; &lt;p&gt;&lt;span style="text-decoration: underline;"&gt;&lt;strong&gt;Major changes&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;[1579] Provide the Kafka quickstart guide&lt;/li&gt; &lt;li&gt;[1557] Remove test scope from bom&lt;/li&gt; &lt;li&gt;[1554] Allow for usage of @ConfigProperty on fields without @Inject&lt;/li&gt; &lt;li&gt;[1548] Add guide for MicroProfile Metrics&lt;/li&gt; &lt;li&gt;[1521]  Introduce JSON-B and JSON-P extensions&lt;/li&gt; &lt;li&gt;[1506] Improve the dependencies between gradle tasks&lt;/li&gt; &lt;li&gt;[1492] rename gradle tasks to camelCase&lt;/li&gt; &lt;li&gt;[1483] Add MicroProfile Health guide&lt;/li&gt; &lt;li&gt;[1426] Support for Microsoft SQL Server [JDBC]&lt;/li&gt; &lt;li&gt;[1417] Testing improvements&lt;/li&gt; &lt;li&gt;[1412] Support wider range of character sets&lt;/li&gt; &lt;li&gt;[1395] Switch to GraalVM 1.0.0-rc13&lt;/li&gt; &lt;li&gt;[1358] Native S2I Builder image&lt;/li&gt; &lt;li&gt;[1318] Add MicroProfile Fault Tolerance guide&lt;/li&gt; &lt;li&gt;[1] Add Vertx web extension&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;There has been quite a bit of feedback, bug fix requests, and feature requests. Quarkus 0.13.0 should be cut in roughly two weeks as Quarkus moves ahead in ~2 week sprints.&lt;/p&gt; &lt;p&gt;Keep the feedback coming! Want to see a feature or bug fix in this release? If so, then &lt;a href="https://github.com/quarkusio/quarkus/issues"&gt;assign 0.13.0 to the PR or issue&lt;/a&gt;.&lt;br /&gt; &lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F20%2Fquarkus-0-12-0-released%2F&amp;#38;linkname=Quarkus%200.12.0%20released" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F20%2Fquarkus-0-12-0-released%2F&amp;#38;linkname=Quarkus%200.12.0%20released" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F20%2Fquarkus-0-12-0-released%2F&amp;#38;linkname=Quarkus%200.12.0%20released" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F20%2Fquarkus-0-12-0-released%2F&amp;#38;linkname=Quarkus%200.12.0%20released" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F20%2Fquarkus-0-12-0-released%2F&amp;#38;linkname=Quarkus%200.12.0%20released" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F20%2Fquarkus-0-12-0-released%2F&amp;#38;linkname=Quarkus%200.12.0%20released" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F20%2Fquarkus-0-12-0-released%2F&amp;#38;linkname=Quarkus%200.12.0%20released" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F20%2Fquarkus-0-12-0-released%2F&amp;#38;linkname=Quarkus%200.12.0%20released" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F20%2Fquarkus-0-12-0-released%2F&amp;#038;title=Quarkus%200.12.0%20released" data-a2a-url="https://developers.redhat.com/blog/2019/03/20/quarkus-0-12-0-released/" data-a2a-title="Quarkus 0.12.0 released"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/03/20/quarkus-0-12-0-released/"&gt;Quarkus 0.12.0 released&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/xofXtbbAgI8" height="1" width="1" alt=""/&gt;</content><summary>Quarkus, a next-generation Kubernetes native Java framework, was announced in early March, and now Quarkus 0.12.0 has been released and is available from the Maven repository. The quickstarts, guides, and website also have been updated, and 213 issues and PRs are included in this release. That’s quite a few updates, but in particular check out the new metrics, health check, and Kafka guides. Also,...</summary><dc:creator>John Clingan</dc:creator><dc:date>2019-03-20T19:55:53Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/03/20/quarkus-0-12-0-released/</feedburner:origLink></entry><entry><title>How to edit and test application code in CodeReady Workspaces</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/E0rTTleyLzE/" /><category term="CodeReady Workspaces" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Red Hat CodeReady Workspaces" scheme="searchisko:content:tags" /><author><name>veermuchandi</name></author><id>searchisko:content:id:jbossorg_blog-how_to_edit_and_test_application_code_in_codeready_workspaces</id><updated>2019-03-20T11:32:55Z</updated><published>2019-03-20T11:32:55Z</published><content type="html">&lt;p&gt;In this &lt;a href="http://How to debug code in CodeReady Workspaces"&gt;CodeReady Workspaces&lt;/a&gt; video, learn how to create a new workspace using the code generated from the launcher, and how to make the application run locally. Also find out how to build and deploy an application locally within the workspace, how to edit and test the code, and how to commit code changes to a remote git repository. The steps described in this video are also available in &lt;a href="https://github.com/RedHatWorkshops/CodeReadyWorkspacesAndLauncherTutorial/blob/master/EditCodeUsingCodeReadyWorkspaces.md"&gt;the tutorial on GitHub&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;span id="more-574507"&gt;&lt;/span&gt;&lt;/p&gt; &lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/uJL8LzQl3Io?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2019/03/18/getting-started-with-codeready-workspaces-and-red-hat-openshift-application-runtimes/"&gt;Part 1: &lt;/a&gt;&lt;a href="https://developers.redhat.com/blog/2019/03/18/getting-started-with-codeready-workspaces-and-red-hat-openshift-application-runtimes/"&gt;Getting started with CodeReady Workspaces and Red Hat OpenShift Application Runtimes launcher&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2019/03/19/create-application-red-hat-openshift-application-runtimes/"&gt;Part 2: How to create a new application with Red Hat OpenShift Application Runtimes launcher&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F20%2Fhow-to-edit-and-test-application-code-in-codeready-workspaces%2F&amp;#38;linkname=How%20to%20edit%20and%20test%20application%20code%20in%20CodeReady%20Workspaces" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F20%2Fhow-to-edit-and-test-application-code-in-codeready-workspaces%2F&amp;#38;linkname=How%20to%20edit%20and%20test%20application%20code%20in%20CodeReady%20Workspaces" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F20%2Fhow-to-edit-and-test-application-code-in-codeready-workspaces%2F&amp;#38;linkname=How%20to%20edit%20and%20test%20application%20code%20in%20CodeReady%20Workspaces" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F20%2Fhow-to-edit-and-test-application-code-in-codeready-workspaces%2F&amp;#38;linkname=How%20to%20edit%20and%20test%20application%20code%20in%20CodeReady%20Workspaces" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F20%2Fhow-to-edit-and-test-application-code-in-codeready-workspaces%2F&amp;#38;linkname=How%20to%20edit%20and%20test%20application%20code%20in%20CodeReady%20Workspaces" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F20%2Fhow-to-edit-and-test-application-code-in-codeready-workspaces%2F&amp;#38;linkname=How%20to%20edit%20and%20test%20application%20code%20in%20CodeReady%20Workspaces" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F20%2Fhow-to-edit-and-test-application-code-in-codeready-workspaces%2F&amp;#38;linkname=How%20to%20edit%20and%20test%20application%20code%20in%20CodeReady%20Workspaces" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F20%2Fhow-to-edit-and-test-application-code-in-codeready-workspaces%2F&amp;#38;linkname=How%20to%20edit%20and%20test%20application%20code%20in%20CodeReady%20Workspaces" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F03%2F20%2Fhow-to-edit-and-test-application-code-in-codeready-workspaces%2F&amp;#038;title=How%20to%20edit%20and%20test%20application%20code%20in%20CodeReady%20Workspaces" data-a2a-url="https://developers.redhat.com/blog/2019/03/20/how-to-edit-and-test-application-code-in-codeready-workspaces/" data-a2a-title="How to edit and test application code in CodeReady Workspaces"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/03/20/how-to-edit-and-test-application-code-in-codeready-workspaces/"&gt;How to edit and test application code in CodeReady Workspaces&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/E0rTTleyLzE" height="1" width="1" alt=""/&gt;</content><summary>In this CodeReady Workspaces video, learn how to create a new workspace using the code generated from the launcher, and how to make the application run locally. Also find out how to build and deploy an application locally within the workspace, how to edit and test the code, and how to commit code changes to a remote git repository. The steps described in this video are also available in the tutori...</summary><dc:creator>veermuchandi</dc:creator><dc:date>2019-03-20T11:32:55Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/03/20/how-to-edit-and-test-application-code-in-codeready-workspaces/</feedburner:origLink></entry></feed>
